{
    "name": "baseline-kubeadm",
    "version": "v2.0.1",
    "kubernetesVersion": "v1.30.10",
    "description": "Baseline Cluster Template with Kubeadm Control Plane",
    "controlplaneprovidertype": "kubeadm",
    "infraprovidertype": "intel",
    "clusterconfiguration": {
      "kind": "KubeadmControlPlaneTemplate",
      "apiVersion": "controlplane.cluster.x-k8s.io/v1beta1",
      "metadata": {
        "labels": {
          "cpumanager": "true"
        }
      },
      "spec": {
        "template": {
          "spec": {
            "files": [
              {
                "path": "/usr/local/bin/append-containerd-config.sh",
                "content": "cat <<EOF >> /etc/containerd/config.toml\n\n[plugins.\\\"io.containerd.internal.v1.opt\\\"]\n  path = \\\"/var/lib/rancher/rke2/agent/containerd\\\"\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\"]\n  stream_server_address = \\\"127.0.0.1\\\"\n  stream_server_port = \\\"10010\\\"\n  enable_selinux = false\n  enable_unprivileged_ports = true\n  enable_unprivileged_icmp = true\n  sandbox_image = \\\"index.docker.io/rancher/mirrored-pause:3.6\\\"\n  disable_apparmor = true\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd]\n  snapshotter = \\\"overlayfs\\\"\n  disable_snapshot_annotations = true\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd.runtimes.runc]\n  runtime_type = \\\"io.containerd.runc.v2\\\"\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd.runtimes.runc.options]\n  SystemdCgroup = true\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\".registry]\n  config_path = \\\"/var/lib/rancher/rke2/agent/etc/containerd/certs.d\\\"\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd.runtimes.kata-qemu]\n  runtime_type = \\\"io.containerd.kata-qemu.v2\\\"\n  runtime_path = \\\"/opt/kata/bin/containerd-shim-kata-v2\\\"\n  privileged_without_host_devices = true\n  pod_annotations = [\\\"io.katacontainers.*\\\"]\n\n[plugins.\\\"io.containerd.grpc.v1.cri\\\".containerd.runtimes.kata-qemu.options]\n  ConfigPath = \\\"/opt/kata/share/defaults/kata-containers/configuration-qemu.toml\\\"\n\nEOF"
              }
            ],
            "clusterConfiguration": {
              "apiServer": {
                "extraArgs": {
                  "feature-gates": "PortForwardWebsockets=true",
                  "tls-cipher-suites":"TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
                }
              },
              "controllerManager":{
                "extraArgs": {}
              },
              "etcd":{
                "local": {
                  "extraArgs": {
                    "cipher-suites": "[TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384]"
                  } 
                }
              },
              "scheduler":{
                "extraArgs": {}
              }
            },
            "joinConfiguration": {
              "nodeRegistration": {
                "kubeletExtraArgs": {
                  "topology-manager-policy": "best-effort",
                  "cpu-manager-policy": "static", 
                  "reserved-cpus": "1",
                  "max-pods": "250",
                  "tls-cipher-suites": "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384"
                }
              }
            },
            "preKubeadmCommands": [
              "/usr/local/bin/append-containerd-config.sh",
              "mkdir -p /etc/systemd/system/rke2-server.service.d",
              "echo '[Service]\nEnvironmentFile=/etc/environment' > /etc/systemd/system/rke2-server.service.d/override.conf"
            ],
  
            "privateRegistriesConfig": {
              "mirrors": {
                "rs-proxy.rs-proxy.svc.cluster.local:8443": {
                  "endpoint": [
                    "https://localhost.internal:9443"
                  ]
                }
              }
            },
            "nodeDrainTimeout": "2m",
            "rolloutStrategy": {
              "type": "RollingUpdate",
              "rollingUpdate": {
                "maxSurge": 1
              }
            }
          }
        }
      }
    },
    "clusterNetwork": {
      "pods": {
        "cidrBlocks": [
          "10.42.0.0/16"
        ]
      },
      "services": {
        "cidrBlocks": [
          "10.43.0.0/16"
        ]
      }
    },
    "cluster-labels": {
      "default-extension": "baseline"
    }
  }