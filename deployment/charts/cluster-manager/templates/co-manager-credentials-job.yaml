{{- if .Values.credentialsM2M.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "cluster-manager.fullname" . }}-credentials-script
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "cluster-manager.labels" . | nindent 4 }}
    app.kubernetes.io/component: credentials-m2m
#  annotations:
#    "helm.sh/hook": pre-install,pre-upgrade
#    "helm.sh/hook-weight": "-10"
#    "helm.sh/hook-delete-policy": before-hook-creation
spec:
  backoffLimit: {{ .Values.credentialsM2M.job.backoffLimit }}
  activeDeadlineSeconds: {{ .Values.credentialsM2M.job.activeDeadlineSeconds }}
  ttlSecondsAfterFinished: {{ .Values.credentialsM2M.job.ttlSecondsAfterFinished }}
  template:
    metadata:
      labels:
        {{- include "cluster-manager.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: credentials-m2m
    spec:
      serviceAccountName: {{ include "cluster-manager.serviceAccountName" . }}
      restartPolicy: Never
      containers:
      - name: credentials-m2m
        image: {{ .Values.credentialsM2M.job.image.repository }}{{ if .Values.credentialsM2M.job.image.tag }}:{{ .Values.credentialsM2M.job.image.tag }}{{ end }}
        imagePullPolicy: {{ .Values.credentialsM2M.job.image.pullPolicy }}
        command: ["/bin/sh"]
        args: ["/scripts/credentials-m2m.sh"]
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          {{- toYaml .Values.credentialsM2M.job.resources | nindent 10 }}
        volumeMounts:
        - name: credentials-script
          mountPath: /scripts
          readOnly: true
        - name: keycloak-admin-secret
          mountPath: /etc/keycloak-admin
          readOnly: true
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - "ALL"
      volumes:
      - name: credentials-script
        configMap:
          name: {{ include "cluster-manager.fullname" . }}-credentials-script
          defaultMode: 0755
      - name: keycloak-admin-secret
        secret:
          secretName: {{ .Values.credentialsM2M.keycloak.adminSecretName }}
          items:
          - key: admin-password
            path: password
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
