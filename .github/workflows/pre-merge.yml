# SPDX-FileCopyrightText: (C) 2025 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

---

name: Pre-Merge CI Pipeline

on:
  pull_request:
    branches:
      - main
      - release-*
  workflow_dispatch: 

permissions: {}

jobs:
  lint:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PR
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ github.head_ref }}
        persist-credentials: false

    - name: "Setup"
      uses: open-edge-platform/orch-ci/.github/actions/bootstrap@13722579bc8edfb712203cb8e88fcc404d2218bc  # 0.1.9
      with:
        gh_token: ${{ secrets.SYS_ORCH_GITHUB }}
        bootstrap_tools: "go,gotools,nodejs"

    - name: Configure cache locations
      run: |
        echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV
    
    - name: Cache build artifact
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
      with:
        path: |
          ${{ env.GOCACHE }}
          ${{ env.GOMODCACHE }}
          ~/.cache/golangci-lint
        key: ${{ github.repository }}-lint-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}

    - name: Lint code
      run: make lint

  build:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PR
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ github.head_ref }}

    - name: "Setup"
      uses: open-edge-platform/orch-ci/.github/actions/bootstrap@13722579bc8edfb712203cb8e88fcc404d2218bc  # 0.1.9
      with:
        gh_token: ${{ secrets.SYS_ORCH_GITHUB }}
        bootstrap_tools: "go,gotools"

    - name: Configure cache locations
      run: |
        echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

    - name: Cache build artifact
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
      with:
        path: |
          ${{ env.GOCACHE }}
          ${{ env.GOMODCACHE }}
        key: ${{ github.repository }}-build-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}

    - name: Build code
      run: make build

  test:
    permissions:
      contents: read
    runs-on: ubuntu-latest
    steps:
    - name: Checkout PR
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      with:
        ref: ${{ github.head_ref }}
        persist-credentials: false

    - name: "Setup"
      uses: open-edge-platform/orch-ci/.github/actions/bootstrap@13722579bc8edfb712203cb8e88fcc404d2218bc  # 0.1.9
      with:
        gh_token: ${{ secrets.SYS_ORCH_GITHUB }}
        bootstrap_tools: "go,gotools" 

    - name: Configure cache locations
      run: |
        echo "GOCACHE=$(go env GOCACHE)" >> $GITHUB_ENV
        echo "GOMODCACHE=$(go env GOMODCACHE)" >> $GITHUB_ENV

    - name: Cache build artifact
      uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
      with:
        path: |
          ${{ env.GOCACHE }}
          ${{ env.GOMODCACHE }}
        key: ${{ github.repository }}-test-${{ runner.os }}-go-${{ hashFiles('**/go.mod') }}

    - name: Test code
      run: make test
  
  pre-merge:
    needs: [lint, build, test]
    uses: open-edge-platform/orch-ci/.github/workflows/pre-merge.yml@main
    with:
      bootstrap_tools: "base,go"
      cache_go: true
      remove_cache_go: true
      run_security_scans: true
      run_version_check: true
      run_dep_version_check: true
      run_build: false
      run_lint: false
      run_test: false
      run_validate_clean_folder: false
      run_docker_build: true
    secrets: inherit